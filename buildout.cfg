[buildout]
gen_path = ${buildout:directory}/gen_path
wsgi-module-name=cgwb_wsgi_app
pkg-name=collective.generic.webbuilder
pkg-extra=[app]
pkg-test-extra=[test,app]
develop=.
extensions=mr.developer buildout-versions
extends-cache=etc/cache
extends=etc/kgs.cfg
buildout_versions_file=etc/generated-kgs.cfg
overwrite-picked-versions-file=true
versions=versions
parts= zopepy test wsgi-config wsgiapp-module application omelette
unzip=true
auto-checkout= collective.generic.skel
               collective.generic.devmode
# settings to be overidden
admin=admin
password=secret
debug=true
host=localhost
port=8085

[zopepy]
recipe=zc.recipe.egg
eggs=${buildout:pkg-name} ${buildout:pkg-extra}
interpreter=zopepy
dependent-scripts = true
scripts= paster
        waitress-serve
        ptweens
        pdistreport
        proutes
        pshell
        prequest
        pviews
        pcreate
        pserve

[sources]
collective.generic.skel= git https://github.com/collective/collective.generic.skel.git
collective.generic.devmode= git https://github.com/collective/collective.generic.devmode.git

[test]
recipe=zc.recipe.testrunner
eggs= ${buildout:pkg-name} ${buildout:pkg-test-extra}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress',
            '-s', '${buildout:pkg-name}']

[omelette]
recipe=collective.recipe.omelette
eggs=${test:eggs}

[wsgi-config]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/etc/templates/cgwb.ini.in
output = ${buildout:directory}/etc/cgwb.ini

[wsgiapp-module]
recipe = collective.recipe.template[genshi]:genshi
output = ${buildout:directory}/parts/wsgiapp/${buildout:wsgi-module-name}.py
inline =
    from pyramid.paster import get_app
    config = '${wsgi-config:output}'
    application = get_app(config, 'main')

[application]
recipe = mk.recipe.modwsgi
eggs = ${zopepy:eggs}
wsgi-module = ${buildout:wsgi-module-name}
extra-paths=${buildout:directory}/parts/wsgiapp

